Comprehensive UG65 Training Guide

1. Introduction to UG65

The Milesight UG65 is a robust, 8-channel, semi-industrial indoor LoRaWAN® gateway designed for various IoT applications. It supports over 2000 node connections, with a communication range of up to 15 km (line of sight) and 2 km in urban environments. It supports Ethernet, Wi-Fi, and cellular backhaul, and is compatible with major network servers.

Key Features:

Quad-core ARM Cortex-A53 CPU, 8GB eMMC

Supports MQTT(S), HTTP(S)

Built-in network server + support for TTI, ChirpStack, etc.

Multiple VPN types: IPsec, OpenVPN, GRE, L2TP, PPTP, DMVPN, WireGuard

Extended operating temperature: −40°C to 70°C

2. Accessing the Web GUI

Default Access Info:

SSID: Gateway_******

Wi-Fi Password: iotpassword

Ethernet IP: 192.168.1.1

Login: admin / password

Steps:

Connect your PC to the gateway via Wi-Fi or Ethernet.

Open a browser and go to 192.168.1.1.

Log in using default credentials.

Follow initial setup and change the password for security.

3. Web GUI Configuration Overview

3.1 Status Tabs:

Overview: Device specs and usage

Cellular: SIM, signal, modem, IP

Network: Ethernet details

WLAN: Wireless status

VPN: Tunnel status

Host List: DHCP leases and bindings

3.2 LoRaWAN Configuration

Packet Forwarder:

General: EUI, multi-destination forwarding

Radios: Configure channels and frequencies

Noise Analyzer: Analyze interference (avoid using with packet forwarder)

Advanced: Set beacon, CRC, keep-alive, etc.

Network Server:

Enable built-in NS

Add Applications (each with MQTT/HTTP target)

Payload Codec: Use Milesight library or write custom JavaScript (ES5)

Add Devices: EUI, app key, codec, fPort, etc.

FUOTA: Remote firmware upgrade

Multicast Groups: Downlink to multiple devices

Gateway Fleet: Connect multiple gateways

Packets: View and send LoRaWAN packets

3.3 Protocol Integration

BACnet Server:

Convert LoRa data to BACnet objects

Add analog, binary, multistate objects

Define alarms, limits, and notifications

Modbus Server:

Accept TCP/RTU over TCP requests

Map LoRa data to Modbus registers

Define register type, address, and format

3.4 Network Configuration

Interfaces:

Ethernet (Static IP, DHCP, PPPoE)

WLAN (AP/Client modes, WPA2, Enterprise)

Cellular (SIM, APN, MTU, DNS, etc.)

VLAN trunking, loopback interfaces

Firewall:

ACL, Port Mapping, DMZ, MAC binding

VPN Options:

DMVPN, IPsec, GRE, L2TP, PPTP, OpenVPN, WireGuard

3.5 System Management

Time sync, SMTP, notifications

User and account management

SNMP: Setup and manage MIB, traps, views

Events and alarms

DeviceHub provisioning and management

3.6 Maintenance

Tools: Ping, traceroute, packet analyzer

Logs: View and export logs

Upgrade firmware

Backup & restore

Reboot

3.7 Edge Applications

Python:

Run custom scripts and manage Python apps

Node-RED:

Drag-and-drop IoT workflows

Use built-in flows to send alerts, HTTP requests, etc.

4. Practical Scenarios

Ethernet setup: Configure static/DHCP under Network > Interface > Port

Wi-Fi AP/Client mode: Under Network > Interface > WLAN

LoRaWAN setup: Enable packet forwarder + network server, add device + codec

Send data to HTTP/MQTT: Add application with corresponding protocol

BACnet/Modbus integration: Define device objects under respective servers

5. Security Tips

Change default password immediately

Use secure VPN (WireGuard, IPsec, etc.)

Regularly update firmware

Enable SNMP traps and logging

Disable unused services

With this training, you should be confident setting up, managing, and deploying UG65 gateways in both test and production environments. Let me know if you want a quiz, checklist, or real-world exercise!

